package bleach.scene.ui
{
	import bleach.BleachDirector;
	import bleach.SceneModule;
	
	import com.greensock.TweenLite;
	import com.greensock.easing.Back;
	
	import flash.display.Shape;
	import flash.display.Sprite;
	import flash.utils.ByteArray;
	import flash.utils.getDefinitionByName;
	
	import pixel.core.PixelLauncher;
	import pixel.core.PixelNode;
	import pixel.ui.control.UIControlFactory;
	import pixel.ui.control.UIProgress;
	import pixel.ui.control.vo.UIMod;

	/**
	 * 弹出层
	 * 
	 * 
	 **/
	public class PopUpLayer extends PixelNode
	{
		private static var _instance:PopUpLayer = null;
		private var _module:SceneModule = null;
		//背景遮罩
		private var _mask:Sprite = null;
		
		private var _content:Sprite = null;
		private var _progress:UIProgress = null;
		public function PopUpLayer()
		{
			if(!_instance)
			{
				throw new Error("Singlton");
			}
			
			var commonUI:Object = getDefinitionByName("ui.common");
			var mod:UIMod = UIControlFactory.instance.decode(new commonUI() as ByteArray);
			_progress = mod.controls.pop().control as UIProgress;
		}
		
		public function show(module:SceneModule,model:Boolean = true):void
		{
			if(model)
			{
				if(!_mask)
				{
					//加入遮罩
					_mask = new Sprite();
					_mask.graphics.clear();
					_mask.graphics.beginFill(0x000000,0.7);
					_mask.graphics.drawRect(0,0,PixelLauncher.launcher.screen.screenWidth,PixelLauncher.launcher.screen.screenHeight);
					_mask.graphics.endFill();
					addChild(_mask);
					_mask.mouseEnabled = false;
					_mask.mouseChildren = false;
				}
			}
			if(_module.loaded)
			{
				addContent(_module.sceneContent);
			}
		}
		
		public function addContent(spr:Sprite):void
		{
			_content = spr;
			_content.scaleX = 0;
			_content.scaleY = 0;
			TweenLite.to(_content,0.5,{scaleX: 1,scaleY: 1,onUpdate:onTweenUpdate,ease:Back.easeOut});
		}
		
		private function onTweenUpdate():void
		{
			_progress.x = (1000 - _progress.scaleX * _progress.width) / 2;
			_progress.y = (600 - _progress.scaleY * _progress.height) / 2;
		}
		
		public function hide():void
		{
			if(_mask && contains(_mask))
			{
				removeChild(_mask);
			}
		}
	}
}